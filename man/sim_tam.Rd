% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim.R
\name{sim_tam}
\alias{sim_tam}
\title{Simulate from a fitted TAM}
\usage{
sim_tam(
  fit,
  n = 10,
  obs_only = TRUE,
  progress = TRUE,
  globals = NULL,
  seed = TRUE
)
}
\arguments{
\item{fit}{A fitted TAM object returned by \code{\link[=fit_tam]{fit_tam()}}.}

\item{n}{Integer; number of simulations (default \code{10}).}

\item{obs_only}{Logical; if \code{TRUE} (default), simulate observations only (random effects fixed at MLEs).
If \code{FALSE}, also simulate random effects and recompute reported quantities under them.}

\item{progress}{Logical; show a progress bar using \code{\link[progressr:with_progress]{progressr::with_progress()}}. Default \code{TRUE}.}

\item{globals}{Optional character vector of global objects for parallel workers (forwarded to \code{furrr}).}

\item{seed}{Seed for random number generation forwarded to \code{furrr} (see \code{\link[furrr:furrr_options]{furrr::furrr_options()}} for details).}
}
\value{
A \strong{named list of data frames} (e.g., \code{catch}, \code{index}, \code{N}, \code{F}, \code{M}, \code{Z}, \code{ssb}, ...),
where each data frame is \strong{row-bound across simulations} and contains a \code{sim} column (1..n).
}
\description{
Draws simulated observations (and optionally random effects) from a fitted model
by calling the likelihood with \code{simulate = TRUE}, then recomputes reported quantities
under those draws. Results are returned as tidy, stacked tables across \code{n}
simulations (one column \verb{sim = 1..n} is added to each table).
}
\details{
For each simulation:
\enumerate{
\item Extract MLEs: \code{p <- as.list(fit$sdrep, "Estimate")}.
\item Draw \code{log_obs} (and, if \code{obs_only = FALSE}, random effects) using \code{nll_fun(p, dat, simulate = TRUE)}.
\item Replace \code{dat$log_obs} with simulated values, rebuild a small RTMB object, and call \code{report()}.
\item Return:
\itemize{
\item observation tables for \code{catch} and \code{index} with simulated \code{obs}, and
\item population tables from \code{report} via \code{\link[=tidy_rep]{tidy_rep()}}.
}
}

All simulation results are then stacked with a \code{sim} column via \code{\link[=stack_nested]{stack_nested()}}.

This function uses \code{\link[furrr:future_map]{furrr::future_map()}} to run the retros in parallel. Remember to plan your
session (e.g., \code{future::plan(multisession, workers = 4)}).
}
\examples{
\dontrun{
future::plan(multisession, workers = 4)
fit <- fit_tam(cod_obs, years = 1983:2024, ages = 2:14)
sims <- sim_tam(fit, n = 5, obs_only = TRUE)
head(sims$ssb)     # has column 'sim'
head(sims$catch)   # simulated obs for catch with 'sim'
}

}
\seealso{
\code{\link[=fit_tam]{fit_tam()}}, \code{\link[=tidy_rep]{tidy_rep()}}, \code{\link[=stack_nested]{stack_nested()}}
}
