% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tidy.R
\name{stack_nested}
\alias{stack_nested}
\title{Stack identically named subtables from a nested list}
\usage{
stack_nested(
  x,
  label = "model",
  label_type = c("auto", "numeric", "character", "factor")
)
}
\arguments{
\item{x}{A named list of results (e.g. sims or models), each containing
a named list of data.frames (e.g. "ssb", "N", "recruitment", ...).
Shape: list(\if{html}{\out{<id>}} = list(\if{html}{\out{<subtable>}} = data.frame, ...), ...)}

\item{label}{Name of the column to add with the outer id. Default "model".
Set to NULL to omit the id column.}

\item{label_type}{Controls how the label column is coerced. One of:
\itemize{
\item \code{"auto"} (default): numeric when possible, else character.
\item \code{"numeric"}: force numeric conversion (with \code{NA} for non-numeric).
\item \code{"character"}: keep as character.
\item \code{"factor"}: convert to factor.
}}
}
\value{
A named list of data.frames. One element per subtable name. Each
data.frame is the row-bound stack across outer ids, with an added \code{id_col}
(if not NULL).
}
\description{
Stack identically named subtables from a nested list
}
\examples{
res <- list(
  sim1 = list(ssb = data.frame(year=1:3, est=1:3),
              N   = data.frame(year=1:2, age=2:3, est=5:6)),
  sim2 = list(ssb = data.frame(year=1:3, est=11:13),
              N   = data.frame(year=1:2, age=2:3, est=15:16))
)
stacked <- stack_nested(res, label = "sim")
str(stacked$ssb)  # has column 'sim'

}
